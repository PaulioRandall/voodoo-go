package scanner

import (
	"github.com/PaulioRandall/voodoo-go/fault"
	"github.com/PaulioRandall/voodoo-go/runer"
	"github.com/PaulioRandall/voodoo-go/token"
)

// Scan scans a line and creates an array of tokens based on
// the grammer rules of the language. Longest match is used to
// identify variable names and keywords etc.
//
// No panic is generated by the scanner so if a panic occurs it's
// either a system issue or a bug.
func Scan(in string) (out []token.Token, err fault.Fault) {

	if in == `` {
		out = []token.Token{}
		return
	}

	itr := runer.NewRuneItr(in)

	for itr.HasNext() {
		var tk *token.Token

		switch {
		case itr.IsNextLetter():
			tk = scanWord(itr)
		case itr.IsNextDigit():
			tk, err = scanNumber(itr)
		case itr.IsNextSpace():
			tk = scanSpace(itr)
		case itr.IsNext('@'):
			tk, err = scanSpell(itr)
		case itr.IsNext('"'):
			tk, err = scanString(itr)
		case itr.IsNextStr(`//`):
			tk = scanComment(itr)
		default:
			tk, err = scanSymbol(itr)
		}

		if err != nil {
			out = nil
			break
		}

		out = append(out, *tk)
	}

	return
}
